{"version":3,"file":"app~71c0e426.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/index.js","webpack://restaurant-apps/./src/scripts/pages/favorite.js","webpack://restaurant-apps/./src/scripts/pages/listRestaurants.js","webpack://restaurant-apps/./src/scripts/pages/detailRestaurant.js","webpack://restaurant-apps/./src/scripts/routes/route-index.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js"],"sourcesContent":["import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.css';\nimport '../components/Navbar';\nimport '../components/Hero';\nimport '../components/ListRestourant';\nimport './pages/listRestaurants';\nimport './pages/favorite';\nimport App from './app/app';\nimport swRegister from './utils/sw-register';\n\nconsole.log('Hello Coders! :)');\n\nconst app = new App({\n  content: document.querySelector('#content'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', async () => {\n  app.renderPage();\n  swRegister();\n});\n","/* eslint-disable no-alert */\nimport FavoriteRestaurantIdb from '../utils/favorite-idb';\nimport './listRestaurants';\n\nconst Favorite = {\n  async render() {\n    return `\n            <div class=\"favorite\">\n                <h2>Favorite Movies</h2>\n                <list-restaurant></list-restaurant>\n            </div>\n        `;\n  },\n\n  async afterRender() {\n    const listRestaurant = document.querySelector('list-restaurant');\n\n    const renderResult = (results) => {\n      listRestaurant.results = results;\n      console.log(results);\n    };\n\n    try {\n      const result = await FavoriteRestaurantIdb.getAllRestaurant();\n      renderResult(result);\n    } catch (message) {\n      console.log(message);\n    }\n  },\n};\n\nexport default Favorite;\n","import '../../components/ListRestourant';\nimport FetchApi from '../data/fetchAPI';\n\nconst ListRestaurants = {\n  async render() {\n    return `\n            <div class=\"lists\">\n                <h2>Lists Restaurant</h2>\n                <list-restaurant></list-restaurant>\n            </div>\n        `;\n  },\n\n  async afterRender() {\n    const listRestaurant = document.querySelector('list-restaurant');\n\n    const renderResult = (results) => {\n      listRestaurant.results = results;\n      console.log(results);\n    };\n\n    try {\n      const result = await FetchApi.getListRestaurants();\n      renderResult(result);\n    } catch (message) {\n      console.log(message);\n    }\n  },\n};\n\nexport default ListRestaurants;\n","/* eslint-disable no-console */\nimport UrlParser from '../routes/url-parser';\nimport FetchApi from '../data/fetchAPI';\nimport API from '../data/config';\nimport LikeButtonInitiator from '../utils/like-button';\n\nconst DetailRestaurant = {\n  async render() {\n    return `\n            <div id=\"detailRestaurant\">\n                <h2>Detail Restaurant</h2>\n            </div>\n        `;\n  },\n\n  detailRestaurantTemplate(detailRestaurant) {\n    return `\n        <div class=\"restaurant\">\n            <div class=\"image\">\n                <span><i class=\"bi bi-star\"></i>${detailRestaurant.rating}</span>\n                <picture>\n                    <source media=\"(max-width:600px )\" srcset=\"${API.API_GET_IMAGE('small', detailRestaurant.pictureId)}\">\n                    <source media=\"(max-width:992px )\" srcset=\"${API.API_GET_IMAGE('medium', detailRestaurant.pictureId)}\">\n                    <img src=\"${API.API_GET_IMAGE('large', detailRestaurant.pictureId)}\" alt=\"image-of-${detailRestaurant.name}\" loading=\"lazy\">\n                </picture>\n            </div>\n            <div class=\"title\">\n                <h1 class=\"\">${detailRestaurant.name}</h1>\n                <p><i class=\"bi bi-geo-alt\"></i>${detailRestaurant.address}, Kota ${detailRestaurant.city}</p>\n                <button class=\"like-button\" aria-label=\"like button\"></button>\n            </div>\n            <div class=\"description\">\n                <p>${detailRestaurant.description}</p>\n            </div>\n            <div class=\"menu\">\n                <h2>Menu</h2>\n                <div class=\"list-menu\">\n                    <div class=\"drinks\">\n                        <h3>Drinks</h3>\n                        <ul>\n                            ${detailRestaurant.menus.drinks.map((drink) => `<li>${drink.name}</li>`).join('')}\n                        </ul>\n                    </div>\n                    <div class=\"foods\">\n                        <h3>Foods</h3>\n                        <ul>\n                            ${detailRestaurant.menus.foods.map((food) => `<li>${food.name}</li>`).join('')}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"review\">\n                <h2>Review Restaurant</h2>\n                <div class=\"list-comment\">\n                    ${detailRestaurant.customerReviews.map((review) => `<div class=\"card\">\n                            <q>${review.review}</q>\n                            <i>${review.name}</i>\n                        </div>`).join('')}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n  },\n\n  async afterRender() {\n    const url = UrlParser.parseActiveUrlWithoutCombiner();\n    const detailRestaurant = await FetchApi.getDetailRestaurant(url.id);\n    const detailRestaurantContainer = document.querySelector('#detailRestaurant');\n    detailRestaurantContainer.innerHTML += this.detailRestaurantTemplate(detailRestaurant);\n\n    LikeButtonInitiator.init({\n      likeButtonContainer: document.querySelector('.like-button'),\n      restaurant: {\n        id: detailRestaurant.id,\n        name: detailRestaurant.name,\n        pictureId: detailRestaurant.pictureId,\n        rating: detailRestaurant.rating,\n        city: detailRestaurant.city,\n        description: detailRestaurant.description,\n      },\n    });\n  },\n\n};\n\nexport default DetailRestaurant;\n","import Favorite from '../pages/favorite';\nimport ListRestaurants from '../pages/listRestaurants';\nimport DetailRestaurant from '../pages/detailRestaurant';\n\nconst routeIndex = {\n  '/': ListRestaurants,\n  '/detail/:id': DetailRestaurant,\n  '/favorite': Favorite,\n};\n\nexport default routeIndex;\n","const UrlParser = {\n  parseActiveUrlWithCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    const splitedUrl = this._urlSplitter(url);\n    return this._urlCombiner(splitedUrl);\n  },\n\n  parseActiveUrlWithoutCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    return this._urlSplitter(url);\n  },\n\n  _urlSplitter(url) {\n    const urlsSplits = url.split('/');\n    return {\n      resource: urlsSplits[1] || null,\n      id: urlsSplits[2] || null,\n      verb: urlsSplits[3] || null,\n    };\n  },\n\n  _urlCombiner(splitedUrl) {\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\n        + (splitedUrl.id ? '/:id' : '')\n        + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\n  },\n};\n\nexport default UrlParser;\n"],"names":["i","console","log","app","App","content","document","querySelector","window","addEventListener","renderPage","swRegister","render","afterRender","listRestaurant","renderResult","results","FavoriteRestaurantIdb","result","FetchApi","DetailRestaurant","detailRestaurantTemplate","detailRestaurant","rating","API","pictureId","name","address","city","description","menus","drinks","map","drink","join","foods","food","customerReviews","review","url","UrlParser","id","innerHTML","LikeButtonInitiator","likeButtonContainer","restaurant","ListRestaurants","Favorite","parseActiveUrlWithCombiner","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","verb"],"sourceRoot":""}